[{"title":"Debugging Memo","url":"/2025/05/14/Debugging-Memo/","content":"\n\n  🌐 Website Building\n\n  \n  \n    Problem 1 — Token expired, cannot git push\n    \n    \n      Click to reveal solution\n      \n        Flush stale credential with:\n        git credential-osxkeychain erase protocol=https host=github.com\n        …then run hexo d and paste the new PAT.\n      \n    \n    \n    \n      \n        \n      \n    0\n      \n        \n          \n        \n      \n    \n  \n\n\n  \n\n\n  \n  \n    Problem 2 — Search pop-up unstyled &amp; duplicate buttons\n    \n    \n      Click to reveal solution\n      \n        Root cause&nbsp;A (duplicate icons)\n        • Butterfly already injects #search-button on the right.\n        • A second custom &lt;li&gt; a#search-toggle was added in the menu.\n        → Remove either trigger (keep stock one for simplicity).\n        Root cause&nbsp;B (CSS not loading)\n        • custom-search.css rendered to public/css/ but wasn’t linked.\n        • The YAML key was mis-typed (inject. / smart quotes).\n        Fix\n        1.&nbsp;Move stylesheet to source/css/custom-search.css.\n        2.&nbsp;In themes/butterfly/_config.yml add:\n        \ninject:\n&nbsp;&nbsp;head:\n&nbsp;&nbsp;&nbsp;&nbsp;- &lt;link&nbsp;rel=\"stylesheet\"&nbsp;href=\"/css/custom-search.css\"&gt;\n\n        3.&nbsp;hexo clean &amp;&amp; hexo g ⇒\n        &lt;link&gt; now appears in&nbsp;&lt;head&gt; → styles apply.\n      \n    \n    \n    \n      \n        \n      \n      0\n      \n        \n          \n        \n      \n    \n  \n\n\n  \n\n\n  \n  \n    Problem 3 — Which way to load extra CSS / JS?\n    \n      Click to reveal solution\n      Two paths in Butterfly / Hexo\n      \n        themes/butterfly/_config.yml ► inject:\n            Site-wide.  Use when every page must see the file.\n            &nbsp;&nbsp;• head:&nbsp;—&nbsp;CSS or critical JS (loads before paint)\n            &nbsp;&nbsp;• bottom:&nbsp;—&nbsp;Non-blocking JS (loads just before &lt;/body&gt;)\n        css: / js: lists in a page’s front-matter\n            Local. Only that post/page gets the links. Ideal for page-specific\n            widgets, diagrams, slide decks, etc.\n      \n      Applied fix (Search modal skin)\n# themes/butterfly/_config.yml\ninject:\n  head:\n    - &lt;link rel=\"stylesheet\" href=\"/css/custom-search.css\"&gt;\n\n      That stylesheet now loads on every page, before the modal HTML is\n         rendered, so the search dialog inherits the new glass-morphism look.\n    \n    \n      \n        \n      \n      0\n      \n        \n          \n        \n      \n    \n  \n\n  \n\n  \n\n\n\n\n\n\n  🧠 Deep Learning\n\n  \n  \n    Problem 1 — CUDA out-of-memory during model training\n    \n      \n      Fig. 2  GPU utilisation spike causing OOM.\n    \n    \n      Click to reveal solution\n      \n        1️⃣ Add torch.cuda.empty_cache() between epochs.\n        2️⃣ Use gradient accumulation (smaller mini-batches).\n        3️⃣ Check pin_memory ≠ True on dataloader when unnecessary.\n      \n    \n    \n      \n        \n      \n    0\n      \n        \n          \n        \n      \n    \n  \n\n  \n\n  \n\n\n\n\n\n\n/*  layout basics  */\n.module            { margin:3rem 0; padding:2rem 1rem; position:relative; }\n.module h2         { margin-top:0; font-size:2rem; text-align:center; }\n\n.problem           { margin:2rem 0; }\n.problem h3        { margin:0 0 .6rem; font-size:1.3rem; }\n.problem details   { margin:.8rem 0 1.2rem; background:#f8f8f8; padding:1rem; border-radius:.5rem; }\n.problem details summary { cursor:pointer; font-weight:600; }\n\n.shot              { text-align:center; margin:1rem 0; }\n.shot img          { max-width:100%; border:1px solid #ccc; border-radius:.4rem; }\n\n.vote              { display:inline-flex; gap:.4rem; align-items:center; font-size:1rem; }\n.vote button       { border:0; background:#eee; padding:.2rem .5rem; line-height:1; cursor:pointer; }\n.vote button:hover { background:#ddd; }\n\n/*  artistic separators – dark-purple version  */\n/*body        { background:#2E294E; color:#877474; font-family:system-ui, sans-serif; }*/\n\n:root{\n  --wb-start:#5349ca;  --wb-end:#92bbdf;  --wb-alpha:.46;\n  --dl-start:#E8DFA3;  --dl-end:#E1BCF4;  --dl-alpha:.86; \n\n\n  /* RGB triplets (only numbers) for rgba() */\n  --wb-start-rgb:83,73,202;  --wb-end-rgb:107,184,255;\n  --dl-start-rgb: 232,223,163;   --dl-end-rgb: 225,188,244;\n}\n\n.module{\n  margin:3rem 0; padding:2rem 1.5rem;\n  border-radius:8px;\n  box-shadow:0 0 16px rgba(0,0,0,.35);\n}\n.module h2{ margin-top:0; text-align:center; font-size:1.9rem; }\n/* individual module palettes */\n\n.module.website{\n  background:linear-gradient(90deg,\n      rgba(var(--wb-start-rgb),var(--wb-alpha)) 0%,\n      rgba(var(--wb-end-rgb),  var(--wb-alpha)) 100%);\n}\n.module.dl{\n  background:linear-gradient(180deg,\n      rgba(var(--dl-start-rgb),var(--dl-alpha)) 0%,\n      rgba(var(--dl-end-rgb),  var(--dl-alpha)) 100%);\n}\n\n/* inner “problem card” tweaks so text is readable on bright grads */\n.problem{ background:rgba(0,0,0,.21); padding:1.2rem 1rem; border-radius:6px; margin:1.8rem 0; }\n.problem h3{ margin:0 0 .7rem; font-size:1.2rem; color:#fff; }\n.problem details{ background:rgba(0,0,0,.35); padding:.9rem; border-radius:4px; color:#e8e8e8; }\n.problem details code{color:#ffb86c; background:rgba(255,255,255,.10); padding:.1em .25em; border-radius:3px;}\n.problem details summary{ cursor:pointer; color:#ffd; }\n\n.problem-sep{border:none;border-top:1px dotted rgba(255,255,255,.4);margin:2.4rem 0;}\n.vote{\n  display:inline-flex; gap:.6rem; align-items:center;\n  font-size:1rem; user-select:none;}\n\n/* universal button look */\n.vote button{\n  --size: 26px;             /* icon box size   */\n  display:flex; align-items:center; justify-content:center;\n  width:var(--size); height:var(--size);\n  border:none; border-radius:50%;\n  background:var(--bg, #ffffff33);   /* will be overridden below */\n  transition:background .15s, transform .15s;\n  cursor:pointer;\n  padding:0;\n}\n\n/* icons use currentColor → easy to recolour */\n.vote svg{ width:60%; fill:currentColor; }\n\n/* individual tints */\n.vote-up   { --bg:#00c85133; color:#00C851; }   /* mint green   */\n.vote-down { --bg:#ff444433; color:#FF4444; }   /* coral red    */\n\n/* hover / active feedback */\n.vote button:hover{\n  background:var(--bg-hover, rgba(255,255,255,.35));\n  transform:translateY(-2px);\n}\n.vote button:active{ transform:translateY(0); }\n\n/* rounded pill around the number */\n.vote-count{\n  padding:.15rem .55rem;\n  background:#ffffff22;\n  border-radius:999px;\n  min-width:1.8rem;\n  text-align:center;\n  font-variant-numeric:tabular-nums;\n  color:#fff;\n  backdrop-filter:blur(2px);\n}\n\n\n\n\n\nconst ENDPOINT = \"https://hexo-votes-backend.vercel.app/api/vote\";\n\ndocument.querySelectorAll('.vote').forEach(block => {\n    const countEl = block.querySelector('.vote-count');\n    const upBtn   = block.querySelector('.vote-up');\n    const downBtn = block.querySelector('.vote-down');\n    const key     = block.parentElement.id;      // e.g. \"wb-p1\"\n\n    /* 1️⃣  initial fetch */\n    fetch(`${ENDPOINT}?key=${key}`)\n        .then(r => r.json()).then(j => countEl.textContent = j.count)\n        .catch(() => countEl.textContent = \"?\");\n\n    /* helper */\n    function send(delta){\n        fetch(ENDPOINT, {\n            method:\"POST\",\n            headers:{ \"Content-Type\":\"application/json\" },\n            body: JSON.stringify({ key, delta })\n        })\n            .then(r => r.json())\n            .then(j => countEl.textContent = j.count);\n    }\n\n    upBtn  .addEventListener('click', () => send(+1));\n    downBtn.addEventListener('click', () => send(-1));\n});\n\n\n","tags":["Hexo"]},{"title":"Hello_html, CSS","url":"/2024/10/22/Hello-html-CSS/","content":"\n\n\n\n  The Rise of Soccer in The US\n  \n\n\n\n  \n    \n    Article By: Jane Dover\n    How the Rise of Soccer in the US Is Changing the Face of Youth Sports\n    The focus on soccer in youth sports programs is exploding nation-wide\n    When the first World Cup arrived in the US in the 90's everyone officially declared that soccer was it. Well it's taken it's time but we can definitely see the influence of soccer, especially women's soccer, across the US. This year, 3 million kids\n      played in youth soccer leagues with 2/3 of those leagues for girls. In fact, in the 12-17 age range the MLS has surpassed the MLB and NFL in popularity.\n    Part of this meteoric rise can be attributed to the impressively soaring ad dollars being pumped into the Women's World Cup games in 2014. The women's games generated $40 million for Fox, that's definitely not chump change. And those advertisers,\n      like ATT, Coca Cola, Verizon, Nike, Visa, and other heavy hitters, are working to make sure they see those numbers grow year after year by investing in youth soccer facilities and promoting programs across the country. \n    Now that big business is involved you can be assured you'll see a continued rise in popularity in soccer across the country for years to come. \n  \n\n  \n    The local semi-pro soccer team in Seattle, WA plays an international friendly\n  \n\n\n\n\n","tags":["html","CSS"]},{"title":"Maxwell's Relations & Mixtures","url":"/2024/11/19/Maxwell-s-Relations-Mixtures/","content":"Problems 麦克斯韦关系9.9 Rubber bands are entropic springs. 橡胶带是熵弹簧。Experiments show that the retractive force f of polymeric elastomers as a function of temperature T and expansion L is approximately given by f(T,L) &#x3D; aT(L−L0) where a and L0 are constants.   (a) Use Maxwell’s relations to determine the entropy and enthalpy, S(L) and H(L), at constant T and p.   (b) If you adiabatically stretch a rubber band by a small amount, its temperature increases, but its volume does not change. Derive an expression for its temperatureT as a function of L, L0, a, and its heat capacity C &#x3D; (∂U&#x2F;∂T).中文。实验表明，聚合弹性体的回缩力 f 与温度 T 和膨胀率 L 的函数关系近似为 f(T,L) &#x3D; aT(L-L0)，其中 a 和 L0 为常数。   (a) 利用麦克斯韦关系确定恒定 T 和 p 时的熵和焓 S(L) 和 H(L)。   (b) 如果将橡皮筋绝热拉伸一小段，其温度会升高，但其体积不变。推导其温度 T 与 L、L0、a 及其热容 C &#x3D; (∂U&#x2F;∂T) 的函数关系式。补充：\n9.10 Metal elasticity is due to energy, not entropy. 金属弹性是由能量而非熵引起的。Experiments show that the retractive force f of a metal rod as a function of temperature T and extension L relative to undeformed length L0 is given by f(T,L) &#x3D;EaΔL&#x2F;L0, where ΔL &#x3D; L[1−α(T−T0)]−L0 &#x3D; L−Lα(T−T0)−L0. a is the cross-sectional area of the rod, E (which has the role of a spring constant) is called Young’s modulus,and α ≈ 10−5 is the linear expansion coefficient. Compute H(L) and S(L). Is the main dependence on L due to enthalpy H or entropy S?中文。实验表明，金属杆的回缩力 f 与温度 T 和相对于未变形长度 L0 的延伸率 L 的函数关系为 f(T,L) &#x3D;EaΔL&#x2F;L0，其中 ΔL &#x3D; L[1-α(T-T0)]-L0 &#x3D; L-Lα(T-T0)-L0。a 是杆的横截面积，E（具有弹簧常数的作用）称为杨氏模量，α ≈ 10-5 是线膨胀系数。计算 H(L) 和 S(L)。对 L 的主要依赖是由于焓 H 还是熵 S？\nClassical ThermodynamicsProblem 8.13An air-standard Diesel cycle absorbs 1500 J⋅mol−1 of heat (step DA of Fig. 8.10,which simulates combustion). The pressure and temperature at the beginning of thecompression step are 1 bar and 20°C, and the pressure at the end of the compression step is 4 bar.Assuming air to be an ideal gas for which CP &#x3D; (7&#x2F;2)R and CV &#x3D; (5&#x2F;2)R, what are the compression ratio and the expansion ratio of the cycle?\n中文空气标准柴油机循环吸收 1500 J-mol-1 的热量（图 8.10 的 DA 步，模拟燃烧）。压缩步骤开始时的压力和温度分别为 1 巴和 20°C，压缩步骤结束时的压力和温度分别为 1 巴和 20°C。\nProblem Otto engineAir is compressed in an Otto cycle beginning at 35 °C and 0.1 MPa. The maximum temperature of the process is 1100 °C and the compression ratio is 7.Find (a) the pressure and temperature at all points of the cycle,(b) the heat that must be supplied to the process per unit mass (kg) of air, the work done per unit mass of air,(c) the efficiency of the cycle. \n中文空气在 35 °C 和 0.1 MPa 开始的奥托循环中被压缩。过程的最高温度为 1100 °C，压缩比为 7。求 (a) 循环各点的压力和温度、(b) 每单位质量（千克）空气必须向该过程提供的热量，以及每单位质量空气所做的功、和 (c) 循环的效率。\nProblem 9.9 with H3’ given as 414.5 kJ&#x2F;kg (show all steps and equations regarding the vapor compression refrigeration systems accompanied by corresponding diagrams - see both diagrams in Fig. 9.1)A vapor-compression refrigeration system operates on the cycle of Fig. 9.1. The refrigerant is tetrafluoroethane (Table 9.1, Fig. F.2).For one of the following sets of operating conditions, determine the circulation rate of the refrigerant,the heat-transferrate in the condenser, the power requirement, the coefficient of performance of the cycle,and the coefficient of performance of a Carnot refrigeration cycle operating between the same temperature levels.(a) Evaporation T &#x3D; 0°C; condensation T &#x3D; 26°C; η(compressor) &#x3D; 0.79; refrigeration rate &#x3D; 600 kJ·s−1\n（显示有关蒸汽压缩制冷系统的所有步骤和方程，并附相应的图表–见图 9.1 中的两个图表）蒸汽压缩制冷系统按图 9.1 中的循环运行。制冷剂为四氟乙烷（表 9.1，图 F.2）。在下列一组运行条件中，请确定制冷剂的循环速率、冷凝器中的传热系数、功率要求、循环的性能系数以及在相同温度水平之间运行的卡诺制冷循环的性能系数。(a) 蒸发温度 T &#x3D; 0°C；冷凝温度 T &#x3D; 26°C；η（压缩机）&#x3D; 0.79；制冷速率 &#x3D; 600 kJ-s-1\n","tags":["Thermodynamics"]},{"title":"PyG Walker Visualization","url":"/2024/10/14/PyG-Walker-Visualization/","content":"“PyG Walker” 开源可视化工具可实现基于jupyter, kaggle和Colab的数据分析\nE.g. Jupter Notebookimport pandas as pdimport pygwalker as pygdf = pd.read_csv(&#x27;random_data.csv&#x27;)mydata = pyg.walk(df)# Data statistics and visualization schematic are as follows:\n\n\n\n\n\n配色是一门艺术🎨\n\n   \n     Great Color Palette\n   \n  adopted in this article\n\n\n\n三色渐变：linear-gradient(135deg,#8a7bbf 0%,#6f60aa 30%,#473C7A 60%,#2E294E 100%)四色翻转：-webkit-linear-gradient(90deg,#462f76,#dd4660,#473c7a,#74ed97)三色翻转（暗橙色）-webkit-linear-gradient(90deg,#382f67,#dd4660,#923b2f)三色翻转（淡金色）-webkit-linear-gradient(90deg,#382f67,#e2ba9d,#dc9d6f)\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\nHere is the editable Nobel Prize profile for this section.\n\n\n\nInserting Python CodeUse Hexo’s built-in Markdown syntax to highlight code blocks. For Python, use the following syntax:\n# testing Python code\ndef greet(name):\n    return f&quot;Hello, &#123;name&#125;!&quot;\nprint(greet(&#39;MY GREETING VISTORs&#39;))\n\n","tags":["Visualization","Python"]},{"title":"Transport-Phenomena","url":"/2025/01/22/Transport-Phenomena/","content":"\nTransport-Phenomena 1st Release\n  Velocity profiles and the stress components. For each of the following velocity\ndistributions, draw a meaningful sketch showing the flow pattern. Then find all the components for the Newtonian fluid. The parameter b is a constant.\n  Below is the Python codes solution:\n\n  \n    \n# Todo: Problem 1 (a)\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nb = 1\nx = np.linspace(-3, 3, 20)\ny = np.linspace(-3, 3, 20)\nX, Y = np.meshgrid(x, y)\nvx = b * Y\nvy = np.zeros_like(X)  # vy = 0\ngradient_magnitude = np.sqrt(vx**2 + vy**2)\n\nplt.figure(figsize=(8, 6))\nquiver_plot = plt.quiver(\n    X, Y, vx, vy, gradient_magnitude, cmap='viridis', scale=10, pivot='middle',\n    headwidth=8, headlength=6\n)\nplt.colorbar(quiver_plot, label='Gradient Magnitude')\nplt.title('Velocity Field ($v_x = by$, $v_y = 0$) | Range: [-3, 3]', fontsize=14, color='midnightblue')\nplt.xlabel('x', fontsize=12, color='darkblue')\nplt.ylabel('y', fontsize=12, color='darkblue')\nplt.axhline(0, color='gray', linestyle='--', linewidth=0.5)\nplt.axvline(0, color='gray', linestyle='--', linewidth=0.5)\nplt.grid(color='gray', linestyle='--', linewidth=0.5, alpha=0.7)\nplt.xlim(-3, 3)\nplt.ylim(-3, 3)\nplt.show()\n    \n  \n\nOutput:\n  Here’s a visualization under condition (b):\n\n  \n    \n  \n\n  \n    \n# TODO: Problem 1 (b)\nb = 1\nx = np.linspace(-3, 3, 20)\ny = np.linspace(-3, 3, 20)\nX, Y = np.meshgrid(x, y)\nvx = b * Y\nvy = b * X\ngradient_magnitude = np.sqrt(vx**2 + vy**2)\n\nplt.figure(figsize=(8, 6), dpi=200)\nquiver_plot = plt.quiver(\n    X, Y, vx, vy, gradient_magnitude, cmap='viridis', scale=10, pivot='middle', headwidth=8, headlength=6\n)\nplt.colorbar(quiver_plot, label='Gradient Magnitude')\nplt.title('Velocity Field: $v_x = by$, $v_y = bx$ | Range: [-3, 3]', fontsize=14, color='midnightblue')\nplt.xlabel('x', fontsize=12, color='darkblue')\nplt.ylabel('y', fontsize=12, color='darkblue')\nplt.axhline(0, color='gray', linestyle='--', linewidth=0.5)\nplt.axvline(0, color='gray', linestyle='--', linewidth=0.5)\nplt.grid(color='gray', linestyle='--', linewidth=0.5, alpha=0.7)\nplt.xlim(-3, 3)\nplt.ylim(-3, 3)\nplt.show()\n    \n  \n\nOutput:\n  Here’s a visualization under condition (b):\n\n  \n    \n  \n\n\n\n  \n    \n# TODO: Problem 1 (c)\n# Todo: Problem 1 (c)\nb = 1\nx = np.linspace(-3, 3, 20)\ny = np.linspace(-3, 3, 20)\nX, Y = np.meshgrid(x, y)\nvx = -b * Y\nvy = b * X\ngradient_magnitude = np.sqrt(vx**2 + vy**2)\n\nplt.figure(figsize=(8, 6), dpi=200)\nquiver_plot = plt.quiver(\n    X, Y, vx, vy, gradient_magnitude, cmap='viridis', scale=10, pivot='middle', headwidth=8, headlength=6\n)\nplt.colorbar(quiver_plot, label='Gradient Magnitude')\nplt.title('Velocity Field: $v_x = -by$, $v_y = bx$ | Range: [-1.5, 1.5]', fontsize=14, color='midnightblue')\nplt.xlabel('x', fontsize=12, color='darkblue')\nplt.ylabel('y', fontsize=12, color='darkblue')\nplt.axhline(0, color='gray', linestyle='--', linewidth=0.5)\nplt.axvline(0, color='gray', linestyle='--', linewidth=0.5)\nplt.grid(color='gray', linestyle='--', linewidth=0.5, alpha=0.7)\nplt.xlim(-1.5, 1.5)\nplt.ylim(-1.5, 1.5)\nplt.show()\n    \n  \n\nOutput:\n  Here’s a visualization under condition (c):\n\n  \n    \n  \n\n\n\n\n  \n    \n# Todo: Problem 1 (d)\nb = 1\nx = np.linspace(-1, 1, 8)\ny = np.linspace(-1, 1, 8)\nz = np.linspace(-1, 1, 8)\nX, Y, Z = np.meshgrid(x, y, z)\nvx = -0.5 * b * X\nvy = -0.5 * b * Y\nvz = b * Z\nvelocity_magnitude = np.sqrt(vx**2 + vy**2 + vz**2)\nfig = plt.figure(figsize=(12, 9), dpi=200)\nax = fig.add_subplot(111, projection='3d')\nnorm = plt.Normalize(vmin=velocity_magnitude.min(), vmax=velocity_magnitude.max())\ncmap = plt.get_cmap('viridis')\nsm = plt.cm.ScalarMappable(cmap=cmap, norm=norm)\nsm.set_array([])\ncolor = sm.to_rgba(velocity_magnitude.flatten())\nquiver_plot = ax.quiver(X, Y, Z, vx, vy, vz, length=0.15, normalize=True, color=color, alpha=0.8, linewidth=2)\ncbar = fig.colorbar(sm, ax=ax, label='Velocity Magnitude')\nax.set_title('3D Velocity Field: $v_x = -0.5bx$, $v_y = -0.5by$, $v_z = bz$ | Range: [-1, 1]', fontsize=14, color='midnightblue')\nax.set_xlabel('x', fontsize=12, color='darkblue')\nax.set_ylabel('y', fontsize=12, color='darkblue')\nax.set_zlabel('z', fontsize=12, color='darkblue')\nax.set_xlim([-1, 1])\nax.set_ylim([-1, 1])\nax.set_zlim([-1, 1])\nax.view_init(elev=30, azim=45)\nplt.show()\n    \n  \n\nOutput:\n  Here’s a visualization under condition (d):\n\n  \n    \n  \n\n\n","tags":["Python"]},{"title":"Global “Like / Stomp” Widget—GitHub ISSUE + Vercel Func","url":"/2025/05/16/global-reaction-widget/","content":"\n\n\n  \n  Real-Time Reactions\n  对于任何 hexo blog, 基于 Github+Vercel 实现 global 计数同步小组件！!\n  这里，Github Issue 作为我们的轻量级数据库，正文以 &#123;&#125; 开头，我们在其中存储一个小的 JSON 对象，\n    将每个 widget 的 Key（例如 \"wb-p1\" ）映射到它的总计数\n  而 Vercel 作用是什么呢？ 我们使用 Vercel 在 /api/vote 处托管了一个微小的无服务器功能，该功能面向 GitHub Issue。\n    将 GitHub PAT 作为环境变量输入，处理 CORS \"跨域资源共享 (Cross-origin resource sharing)\"，当浏览器调用 GET /api/vote?key=…  时，Vercel 就会获取并返回 JSON 更新 ISSUE （即计数总量）。\n\n\n\n\n\n  \n    Setup in 3 Steps ▼\n    \n      GitHub — create Issue __VOTES__, body &#123;&#125;, note its number.\n          Generate a PAT with public_repo scope.\n      Backend repo ＋ Vercel — import, add env var GH_TOKEN, drop api/vote.js.\n      Hexo page — paste the vote widget (below) into any post.\n          hexo clean && hexo g -d → counts sync globally.\n    \n  \n\n\n\n\n  Demo Widget\n  Click 👍 or 👎 — open this page in two tabs to prove global sync.\n\n  \n    👍\n    0\n    👎\n  \n\n\n\n\n\n/* ———  colour-vars  ——— */\n:root{\n  --bg:#ffffff;\n  --text:#222222;\n  --blue:#5b6065;\n  --pink:#FF6DA3;\n  --glass:#ffffff15;\n}\nbody{background:var(--bg);color:var(--text);margin:0;font-family:system-ui;}\n/* ———  hero  ——— 下面的3个 rem 分别表示顶部，两侧和底部的空白距离*/\n.hero{padding:1.5rem 1rem 0.8rem;text-align:center;position:relative;}\n.hero::before{content:\"\";position:absolute;inset:0;background:\nradial-gradient(circle at 50% -20%,#6b7cff55,transparent 70%);\nz-index:-1;}\n/* ⬇️ margin 语法： top  right  bottom  left */\n.hero h1{margin:0 0 2.9rem 0;font-size:2.6rem;line-height:1.25;font-weight:800;color:#2b2a2a;}\n/* ⬇️ display：block 强制将 span 里的内容放在主标题文本下的单独一行中 */\n.hero h1 span{font-size:1.9rem;font-weight:600; display:block; color:#2b2a2a;}\n/* ⬇️ max-width 控制行的长度，text-align 控制文字方向 ————*/\n.hero p{margin:.9rem auto 0;max-width:860px;color:#4c1818;font-size:1.05rem; text-align: left}\n\n/* ———  cards  ——— */\n.card{background:var(--glass);backdrop-filter:blur(8px);border-radius:10px;\npadding:1.5rem 1.6rem;margin:2.5rem auto;max-width:680px;box-shadow:0 8px 20px #0004;}\n.steps summary{cursor:pointer;font-weight:600;font-size:1.1rem;}\n.steps summary span{font-size:.8rem;color:#888;}\n.steps ol{margin:.8rem 0 0 1.2rem;line-height:1.5;}\n.demo h2{margin:0 0 .8rem;font-size:1.5rem;color:#2b2a2a;}\n\n/* ———  vote widget  ——— */\n.vote{display:inline-flex;gap:.9rem;align-items:center;margin-top:1rem;}\n.vote button{\n  width:38px;height:38px;border:none;border-radius:50%;font-size:1.35rem;\n  display:flex;align-items:center;justify-content:center;cursor:pointer;\n  color:#111;background:rgba(236,234,234,0.9);backdrop-filter:blur(6px);transition:.2s;\n}\n.vote button:hover{transform:translateY(-2px);background:rgba(255,255,255,0.27);}\n.vote-up{color:var(--blue);}\n.vote-down{color:var(--pink);}\n.vote-count{\n  min-width:2.4rem;text-align:center;padding:.28rem .7rem;\n  background:#ECEAEAE5;color:#2b2a2a;border-radius:999px;\n  font-variant-numeric:tabular-nums;backdrop-filter:blur(6px);font-size:1rem;\n}\n\n\n\n\nconst ENDPOINT = \"https://hexo-votes-backend.vercel.app/api/vote\";\n\ndocument.querySelectorAll('.vote').forEach(block=>{\n  const key   = block.closest('article').id;\n  const count = block.querySelector('.vote-count');\n  const send  = d => fetch(ENDPOINT,{\n     method:\"POST\",headers:{'Content-Type':'application/json'},\n     body:JSON.stringify({key,delta:d})\n  }).then(r=>r.json()).then(j=>count.textContent=j.count);\n\n  fetch(`${ENDPOINT}?key=${key}`)\n    .then(r=>r.json()).then(j=>count.textContent=j.count)\n    .catch(()=>count.textContent='?');\n\n  block.querySelector('.vote-up').onclick   = () => send(+1);\n  block.querySelector('.vote-down').onclick = () => send(-1);\n});\n\n\n","tags":["Hexo","Serverless","GitHub","Vercel"]},{"title":"Hello World","url":"/2024/10/01/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"HTML, CSS and Javascript","url":"/2025/05/23/HTML-CSS-and-Javascript/","content":"\n\n  \n  总结下基础概念\n  ！!\n  首先，node.js 为 JavaScript 的运行环境，而 npm (Node Package Manager) 作为默认\n     的包管理器，下载和更新项目所需的第三方依赖 —— 之前我们使用 npm install --save hexo-blog-encrypt 创建了 A Secret 加密页面。\n     以面对对象编程语言为例，如果说 JavaScript 对应 Python，node.js 可以理解为python interpreter，npm 则对应 pip。\n  此外，JavaScript 有一种常见的数据格式 JSON (JavaScript Object Notation)，用于储存不同类型字符串。例如，在 Github Issue 中存储\nJSON 格式对象来捕捉小组件的计数。类似的，它可以看作 Python 中的字典，两者之间也可相互转换，如下所示: \n\n\n\n\n\n\n  \n    JSON 转换为字典\n    \nimport json\n# 下载到一串 JSON 文本\njson_text = '&#123;\"name\": \"Alice\", \"age\": 30, \"isAdmin\": false&#125;'\n# 反序列化成 Python dict\ndata = json.loads(json_text)\nprint(data[\"name\"])        # 输出: Alice\nprint(type(data))          # 输出: Class: \"dict\"\n    \n\n  \n  \n  \n  hljs.highlightAll();\n\n\n\n\n!!!!!!!!\n后续补充本页 CSS 布局设置，及 z-index 设定\n\n\n\n\n\n/* ———  colour-vars  ——— */\n:root{\n  --bg:#ffffff;\n  --text:#222222;\n  --blue:#5b6065;\n  --pink:#FF6DA3;\n  --glass:#ffffff15;\n}\nbody{background:var(--bg);color:var(--text);margin:0;font-family:system-ui;}\n/* ———  hero  ——— 下面的3个 rem 分别表示顶部，两侧和底部的空白距离*/\n.hero{padding:1.5rem 1rem 0.8rem;text-align:center;position:relative;}\n.hero::before{\n  content:\"\";\n  position:absolute;\n  inset:-50px -5vw;\n  background:radial-gradient(\n              circle at 50% 0%,           /* centre = top middle */\n              rgba(107,124,255,.33) 0%,  /* solid colour */\n              transparent 70%);          /* fade to nothing */\n  pointer-events:none;                   /* bonus: don’t block clicks */\n}\n\n/* ⬇️ margin 语法： top  right  bottom  left */\n.hero h1{margin:0 0 1.9rem 0;font-size:1.6rem;line-height:1.25;font-weight:800;color:#2b2a2a;}\n/* ⬇️ display：block 强制将 span 里的内容放在主标题文本下的单独一行中 */\n.hero h1 span{font-size:1.9rem;font-weight:600; display:block; color:#2b2a2a;}\n/* ⬇️ max-width 控制行的长度，text-align 控制文字方向 ————*/\n.hero p{margin:.9rem auto 0;max-width:860px;color:#4c1818;font-size:1.05rem; text-align: left}\n\n/* ———  cards  ——— */\n.card{background:var(--glass);backdrop-filter:blur(8px);border-radius:10px;\npadding:1.5rem 1.6rem;margin:1.5rem auto;max-width:680px;box-shadow:0 8px 20px #0004;}\n.steps summary{cursor:pointer;font-weight:600;font-size:1.1rem;}\n.steps summary span{font-size:.8rem;color:#888;}\n.steps ol{margin:.8rem 0 0 1.2rem;line-height:1.5;}\n.demo h2{margin:0 0 .8rem;font-size:1.5rem;color:#2b2a2a;}\npre{background:#0000000d;border-radius:8px;padding:.9rem 1rem;\n    overflow-x:auto;font-size:.9rem;line-height:1.45;}\ncode{font-family:SFMono-Regular,Menlo,Consolas,monospace;}\n\n\n.buchong p{margin:.9rem auto 0;max-width:860px;color:#4c1818;font-size:1.05rem; text-align: left}\n\n"}]